{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/manav/HABBIT-TRACKER/habit-tracker-ts/src/lib/api.ts"],"sourcesContent":["// lib/api.ts - Typed API client with full backend integration\n\nimport type {\n  User,\n  Habit,\n  Badge,\n  AIRecommendation,\n  Progress,\n  UserStats,\n  WeeklyProgress,\n  AdminAnalytics,\n  LoginRequest,\n  SignupRequest,\n  CreateHabitRequest,\n  CheckInRequest,\n  MessageResponse,\n  APIError,\n  CreateFirstAdminRequest,\n  AdminInviteRequest,\n  AdminInviteAccept,\n  AdminInvite,\n} from '@/lib/types';\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000/api';\n\n// Custom error class\nclass APIException extends Error {\n  constructor(public status: number, message: string) {\n    super(message);\n    this.name = 'APIException';\n  }\n}\n\n// Generic API request handler\nasync function apiRequest<T>(\n  endpoint: string,\n  options: RequestInit = {}\n): Promise<T> {\n  const url = `${API_BASE_URL}${endpoint}`;\n\n  const defaultOptions: RequestInit = {\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n  };\n\n  const config = { ...defaultOptions, ...options };\n\n  try {\n    const response = await fetch(url, config);\n\n    if (response.status === 401) {\n      if (typeof window !== 'undefined') {\n        window.location.href = '/login';\n      }\n      throw new APIException(401, 'Unauthorized');\n    }\n\n    if (!response.ok) {\n      const error: APIError = await response.json();\n      throw new APIException(response.status, error.detail || 'API request failed');\n    }\n\n    return await response.json();\n  } catch (error) {\n    if (error instanceof APIException) {\n      throw error;\n    }\n    console.error('API Error:', error);\n    throw new Error('Network error or server unavailable');\n  }\n}\n\n// Authentication APIs\nexport const authAPI = {\n  signup: (data: SignupRequest): Promise<MessageResponse> =>\n    apiRequest('/signup', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  login: (data: LoginRequest): Promise<MessageResponse> =>\n    apiRequest('/login', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  logout: (): Promise<MessageResponse> =>\n    apiRequest('/logout', {\n      method: 'POST',\n    }),\n\n  createFirstAdmin: (data: CreateFirstAdminRequest): Promise<MessageResponse> =>\n    apiRequest('/create-first-admin', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  getCurrentUser: (): Promise<User> => apiRequest('/me'),\n};\n\n// Habit APIs\nexport const habitAPI = {\n  getAllHabits: (): Promise<Habit[]> => apiRequest('/habits'),\n\n  createHabit: (data: CreateHabitRequest): Promise<Habit> =>\n    apiRequest('/habits', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  checkInHabit: (\n    habitId: number,\n    data: CheckInRequest = {}\n  ): Promise<Habit> =>\n    apiRequest(`/check-in/${habitId}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n};\n\n// Progress APIs\nexport const progressAPI = {\n  getDailyProgress: (): Promise<Progress> => apiRequest('/progress'),\n\n  getWeeklyProgress: (): Promise<WeeklyProgress> => apiRequest('/progress/weekly'),\n};\n\n// Gamification APIs\nexport const gamificationAPI = {\n  getUserStats: (): Promise<UserStats> => apiRequest('/stats'),\n\n  getBadges: (): Promise<Badge[]> => apiRequest('/badges'),\n};\n\n// AI Recommendation APIs\nexport const recommendationAPI = {\n  generateRecommendation: (\n    recommendationType: 'motivation' | 'improvement' | 'habit_suggestion'\n  ): Promise<AIRecommendation> =>\n    apiRequest('/recommendations/generate', {\n      method: 'POST',\n      body: JSON.stringify({ recommendation_type: recommendationType }),\n    }),\n\n  getRecommendations: (\n    limit: number = 10,\n    unreadOnly: boolean = false\n  ): Promise<AIRecommendation[]> =>\n    apiRequest(`/recommendations?limit=${limit}&unread_only=${unreadOnly}`),\n\n  getDailyRecommendations: (): Promise<AIRecommendation[]> =>\n    apiRequest('/recommendations/daily'),\n\n  markAsRead: (recommendationId: number): Promise<MessageResponse> =>\n    apiRequest(`/recommendations/${recommendationId}/read`, {\n      method: 'PATCH',\n    }),\n};\n\n// Admin APIs\nexport const adminAPI = {\n  getAllUsers: (): Promise<User[]> => apiRequest('/admin/users'),\n\n  createUser: (\n    email: string,\n    password: string,\n    role: string = 'user'\n  ): Promise<MessageResponse> =>\n    apiRequest('/admin/users', {\n      method: 'POST',\n      body: JSON.stringify({ email, password, role }),\n    }),\n\n  getAnalytics: (): Promise<AdminAnalytics> => apiRequest('/admin/analytics'),\n\n  inviteAdmin: (data: AdminInviteRequest): Promise<AdminInvite> =>\n    apiRequest('/admin/invite', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  getInvites: (): Promise<AdminInvite[]> => apiRequest('/admin/invites'),\n\n  revokeInvite: (inviteId: number): Promise<MessageResponse> =>\n    apiRequest(`/admin/invites/${inviteId}`, {\n      method: 'DELETE',\n    }),\n\n  acceptInvite: (data: AdminInviteAccept): Promise<MessageResponse> =>\n    apiRequest('/admin/accept-invite', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n};\n\nexport default {\n  authAPI,\n  habitAPI,\n  progressAPI,\n  gamificationAPI,\n  recommendationAPI,\n  adminAPI,\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///home/manav/HABBIT-TRACKER/habit-tracker-ts/src/app/dashboard/progress/page.tsx"],"sourcesContent":["// src/app/dashboard/progress/page.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { progressAPI } from '@/lib/api';\nimport type { Progress, WeeklyProgress } from '@/lib/types';\n\nfunction ProgressPage() {\n  const [dailyProgress, setDailyProgress] = useState<Progress | null>(null);\n  const [weeklyProgress, setWeeklyProgress] = useState<WeeklyProgress | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadProgress();\n  }, []);\n\n  const loadProgress = async () => {\n    try {\n      const [daily, weekly] = await Promise.all([\n        progressAPI.getDailyProgress(),\n        progressAPI.getWeeklyProgress(),\n      ]);\n      setDailyProgress(daily);\n      setWeeklyProgress(weekly);\n    } catch (error) {\n      console.error('Failed to load progress:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex-center\" style={{ minHeight: '50vh' }}>\n        <div className=\"spinner\" style={{ width: '2rem', height: '2rem' }}></div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"dashboard-header\">\n        <h1 className=\"dashboard-title\">Progress</h1>\n        <p className=\"dashboard-subtitle\">Track your habit completion and growth</p>\n      </div>\n\n      {/* Today's Progress */}\n      <div className=\"card mb-4\">\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">Today&apos;s Progress</h2>\n          <p className=\"card-description\">Your completion status for today</p>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"progress-bar-container\">\n            <div className=\"progress-bar-header\">\n              <span className=\"progress-bar-label\">Overall Completion</span>\n              <span className=\"progress-bar-value\">{dailyProgress?.completionRate.toFixed(0)}%</span>\n            </div>\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-bar-fill\" \n                style={{ width: `${dailyProgress?.completionRate || 0}%` }}\n              ></div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-3 mt-4\">\n            <div className=\"stat-card\">\n              <div className=\"stat-card-header\">\n                <span className=\"stat-card-title\">Completed</span>\n                <div className=\"stat-card-icon\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                    <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"/>\n                    <polyline points=\"22 4 12 14.01 9 11.01\"/>\n                  </svg>\n                </div>\n              </div>\n              <div className=\"stat-card-value\">{dailyProgress?.completedToday || 0}</div>\n              <div className=\"stat-card-description\">Habits checked in today</div>\n            </div>\n\n            <div className=\"stat-card\">\n              <div className=\"stat-card-header\">\n                <span className=\"stat-card-title\">Total Habits</span>\n                <div className=\"stat-card-icon\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                    <rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"/>\n                    <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"/>\n                    <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"/>\n                    <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"/>\n                  </svg>\n                </div>\n              </div>\n              <div className=\"stat-card-value\">{dailyProgress?.totalHabits || 0}</div>\n              <div className=\"stat-card-description\">Active habits</div>\n            </div>\n\n            <div className=\"stat-card\">\n              <div className=\"stat-card-header\">\n                <span className=\"stat-card-title\">Points Earned</span>\n                <div className=\"stat-card-icon\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                    <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"/>\n                  </svg>\n                </div>\n              </div>\n              <div className=\"stat-card-value\">{dailyProgress?.totalPoints || 0}</div>\n              <div className=\"stat-card-description\">Level {dailyProgress?.currentLevel || 1}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Weekly Progress */}\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">Weekly Progress</h2>\n          <p className=\"card-description\">Your completion rates for the past 7 days</p>\n        </div>\n        <div className=\"card-content\">\n          {weeklyProgress?.weekly_progress && weeklyProgress.weekly_progress.length > 0 ? (\n            <div>\n              {weeklyProgress.weekly_progress.map((day, index) => (\n                <div key={index} className=\"mb-3\">\n                  <div className=\"progress-bar-header\">\n                    <span className=\"progress-bar-label\">\n                      {new Date(day.date).toLocaleDateString('en-US', { \n                        weekday: 'short', \n                        month: 'short', \n                        day: 'numeric' \n                      })}\n                    </span>\n                    <span className=\"progress-bar-value\">\n                      {day.completed}/{day.total} ({day.completion_rate.toFixed(0)}%)\n                    </span>\n                  </div>\n                  <div className=\"progress-bar\">\n                    <div \n                      className=\"progress-bar-fill\" \n                      style={{ width: `${day.completion_rate}%` }}\n                    ></div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"empty-state\">\n              <div className=\"empty-state-icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                  <polyline points=\"22 12 18 12 15 21 9 3 6 12 2 12\"/>\n                </svg>\n              </div>\n              <h3 className=\"empty-state-title\">No data yet</h3>\n              <p className=\"empty-state-description\">\n                Start tracking habits to see your weekly progress\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressPage;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":["file:///home/manav/HABBIT-TRACKER/habit-tracker-ts/node_modules/%40swc/helpers/esm/_define_property.js"],"sourcesContent":["function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n"],"names":[],"mappings":";;;;AAAA,SAAS,iBAAiB,GAAG,EAAE,GAAG,EAAE,KAAK;IACrC,IAAI,OAAO,KAAK;QACZ,OAAO,cAAc,CAAC,KAAK,KAAK;YAAE,OAAO;YAAO,YAAY;YAAM,cAAc;YAAM,UAAU;QAAK;IACzG,OAAO,GAAG,CAAC,IAAI,GAAG;IAElB,OAAO;AACX","ignoreList":[0],"debugId":null}}]
}