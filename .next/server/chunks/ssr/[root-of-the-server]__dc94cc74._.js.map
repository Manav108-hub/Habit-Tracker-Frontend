{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/manav/HABBIT-TRACKER/habit-tracker-ts/src/lib/api.ts"],"sourcesContent":["// lib/api.ts - Typed API client with full backend integration\n\nimport type {\n  User,\n  Habit,\n  Badge,\n  AIRecommendation,\n  Progress,\n  UserStats,\n  WeeklyProgress,\n  AdminAnalytics,\n  LoginRequest,\n  SignupRequest,\n  CreateHabitRequest,\n  CheckInRequest,\n  MessageResponse,\n  APIError,\n  CreateFirstAdminRequest,\n  AdminInviteRequest,\n  AdminInviteAccept,\n  AdminInvite,\n} from '@/lib/types';\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000/api';\n\n// Custom error class\nclass APIException extends Error {\n  constructor(public status: number, message: string) {\n    super(message);\n    this.name = 'APIException';\n  }\n}\n\n// Generic API request handler\nasync function apiRequest<T>(\n  endpoint: string,\n  options: RequestInit = {}\n): Promise<T> {\n  const url = `${API_BASE_URL}${endpoint}`;\n\n  const defaultOptions: RequestInit = {\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n  };\n\n  const config = { ...defaultOptions, ...options };\n\n  try {\n    const response = await fetch(url, config);\n\n    if (response.status === 401) {\n      if (typeof window !== 'undefined') {\n        window.location.href = '/login';\n      }\n      throw new APIException(401, 'Unauthorized');\n    }\n\n    if (!response.ok) {\n      const error: APIError = await response.json();\n      throw new APIException(response.status, error.detail || 'API request failed');\n    }\n\n    return await response.json();\n  } catch (error) {\n    if (error instanceof APIException) {\n      throw error;\n    }\n    console.error('API Error:', error);\n    throw new Error('Network error or server unavailable');\n  }\n}\n\n// Authentication APIs\nexport const authAPI = {\n  signup: (data: SignupRequest): Promise<MessageResponse> =>\n    apiRequest('/signup', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  login: (data: LoginRequest): Promise<MessageResponse> =>\n    apiRequest('/login', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  logout: (): Promise<MessageResponse> =>\n    apiRequest('/logout', {\n      method: 'POST',\n    }),\n\n  createFirstAdmin: (data: CreateFirstAdminRequest): Promise<MessageResponse> =>\n    apiRequest('/create-first-admin', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  getCurrentUser: (): Promise<User> => apiRequest('/me'),\n};\n\n// Habit APIs\nexport const habitAPI = {\n  getAllHabits: (): Promise<Habit[]> => apiRequest('/habits'),\n\n  createHabit: (data: CreateHabitRequest): Promise<Habit> =>\n    apiRequest('/habits', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  checkInHabit: (\n    habitId: number,\n    data: CheckInRequest = {}\n  ): Promise<Habit> =>\n    apiRequest(`/check-in/${habitId}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n};\n\n// Progress APIs\nexport const progressAPI = {\n  getDailyProgress: (): Promise<Progress> => apiRequest('/progress'),\n\n  getWeeklyProgress: (): Promise<WeeklyProgress> => apiRequest('/progress/weekly'),\n};\n\n// Gamification APIs\nexport const gamificationAPI = {\n  getUserStats: (): Promise<UserStats> => apiRequest('/stats'),\n\n  getBadges: (): Promise<Badge[]> => apiRequest('/badges'),\n};\n\n// AI Recommendation APIs\nexport const recommendationAPI = {\n  generateRecommendation: (\n    recommendationType: 'motivation' | 'improvement' | 'habit_suggestion'\n  ): Promise<AIRecommendation> =>\n    apiRequest('/recommendations/generate', {\n      method: 'POST',\n      body: JSON.stringify({ recommendation_type: recommendationType }),\n    }),\n\n  getRecommendations: (\n    limit: number = 10,\n    unreadOnly: boolean = false\n  ): Promise<AIRecommendation[]> =>\n    apiRequest(`/recommendations?limit=${limit}&unread_only=${unreadOnly}`),\n\n  getDailyRecommendations: (): Promise<AIRecommendation[]> =>\n    apiRequest('/recommendations/daily'),\n\n  markAsRead: (recommendationId: number): Promise<MessageResponse> =>\n    apiRequest(`/recommendations/${recommendationId}/read`, {\n      method: 'PATCH',\n    }),\n};\n\n// Admin APIs\nexport const adminAPI = {\n  getAllUsers: (): Promise<User[]> => apiRequest('/admin/users'),\n\n  createUser: (\n    email: string,\n    password: string,\n    role: string = 'user'\n  ): Promise<MessageResponse> =>\n    apiRequest('/admin/users', {\n      method: 'POST',\n      body: JSON.stringify({ email, password, role }),\n    }),\n\n  getAnalytics: (): Promise<AdminAnalytics> => apiRequest('/admin/analytics'),\n\n  inviteAdmin: (data: AdminInviteRequest): Promise<AdminInvite> =>\n    apiRequest('/admin/invite', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  getInvites: (): Promise<AdminInvite[]> => apiRequest('/admin/invites'),\n\n  revokeInvite: (inviteId: number): Promise<MessageResponse> =>\n    apiRequest(`/admin/invites/${inviteId}`, {\n      method: 'DELETE',\n    }),\n\n  acceptInvite: (data: AdminInviteAccept): Promise<MessageResponse> =>\n    apiRequest('/admin/accept-invite', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n};\n\nexport default {\n  authAPI,\n  habitAPI,\n  progressAPI,\n  gamificationAPI,\n  recommendationAPI,\n  adminAPI,\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///home/manav/HABBIT-TRACKER/habit-tracker-ts/src/components/auth/AuthForm.tsx"],"sourcesContent":["// src/components/auth/AuthForm.tsx\n'use client';\n\nimport { useState, FormEvent } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { authAPI } from '@/lib/api';\nimport Link from 'next/link';\n\ninterface AuthFormProps {\n  mode: 'login' | 'signup';\n}\n\nexport default function AuthForm({ mode }: AuthFormProps) {\n  const router = useRouter();\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setLoading(true);\n\n    try {\n      if (mode === 'login') {\n        await authAPI.login({ email, password });\n        setSuccess('Login successful! Redirecting...');\n        setTimeout(() => router.push('/dashboard'), 1000);\n      } else {\n        await authAPI.signup({ email, password });\n        setSuccess('Account created! Please login.');\n        setTimeout(() => router.push('/login'), 2000);\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'An error occurred';\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"card auth-card\">\n        <div className=\"card-header text-center\">\n          <h2 className=\"card-title\">\n            {mode === 'login' ? 'Welcome back' : 'Create an account'}\n          </h2>\n          <p className=\"card-description\">\n            {mode === 'login' \n              ? 'Enter your credentials to access your account' \n              : 'Enter your details to create your account'}\n          </p>\n        </div>\n        \n        <div className=\"card-content\">\n          {error && (\n            <div className=\"alert alert-error\">\n              <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\"/>\n              </svg>\n              <span>{error}</span>\n            </div>\n          )}\n\n          {success && (\n            <div className=\"alert alert-success\">\n              <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\"/>\n              </svg>\n              <span>{success}</span>\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <div className=\"input-icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                  <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"/>\n                  <polyline points=\"22,6 12,13 2,6\"/>\n                </svg>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"you@example.com\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <div className=\"input-icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                  <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"/>\n                  <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"/>\n                </svg>\n                <input\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"••••••••\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                  minLength={8}\n                />\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary btn-full\" disabled={loading}>\n              {loading ? (\n                <>\n                  <span className=\"spinner\"></span>\n                  Processing...\n                </>\n              ) : (\n                mode === 'login' ? 'Sign In' : 'Create Account'\n              )}\n            </button>\n          </form>\n        </div>\n        \n        <div className=\"card-footer text-center\">\n          <p className=\"text-small text-muted\">\n            {mode === 'login' ? \"Don't have an account? \" : 'Already have an account? '}\n            <Link \n              href={mode === 'login' ? '/signup' : '/login'}\n              className=\"link-primary\"\n            >\n              {mode === 'login' ? 'Sign up' : 'Sign in'}\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}